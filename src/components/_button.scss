@use "../variables";
@use "../colors";

$btn-padding-y: (
  sm: 0.4rem,
  lg: 0.56rem,
);

$btn-padding-x: (
  sm: 0.75rem,
  lg: 0.9rem,
  xl: 1.3rem,
);

.btn {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.4rem;
  flex-shrink: 0;
  color: colors.$body-light;
  padding: map-get($btn-padding-y, sm) map-get($btn-padding-x, lg);
  background-color: transparent;
  border: 3px solid transparent;
  height: map-get(variables.$form-controls-height, sm);
  position: relative;
  outline: none;
  border-radius: map-get(variables.$radius, lg);
  transition: background-color variables.$transition-duration,
    color variables.$transition-duration,
    box-shadow variables.$transition-duration;

  &:hover,
  &:focus {
    background-color: colors.$bg-dark;
  }

  &:focus {
    box-shadow: 0px 0px 0px 3px rgba(0, 0, 0, 0.1);
  }

  &.small {
    padding: map-get($btn-padding-y, sm) map-get($btn-padding-x, sm);
    height: map-get(variables.$form-controls-height, xs);
    font-size: 0.875rem;
    border-radius: map-get(variables.$radius, sm);

    &.icon {
      font-size: 1rem;
    }
  }

  &.large {
    padding: map-get($btn-padding-y, lg) map-get($btn-padding-x, xl);
    height: map-get(variables.$form-controls-height, lg);
  }

  &.icon-only {
    width: map-get(variables.$form-controls-height, sm);
  }

  @mixin button(
    $variation,
    $bg: colors.$primary,
    $hover: colors.$primary-hover,
    $active: colors.$primary-dark,
    $focus: colors.$primary-shadow
  ) {
    &.#{$variation} {
      background-color: $bg;
      color: #fff;
      border-bottom-color: $active;

      &:hover,
      &:focus {
        background-color: $hover;
      }

      &:focus {
        box-shadow: 0px 0px 0px 3px $focus;
      }

      &:active {
        background-color: $active;
      }
    }
  }

  @include button(primary);

  @include button(
    warning,
    colors.$warning,
    colors.$warning-hover,
    colors.$warning-dark,
    colors.$warning-shadow
  );

  @include button(
    danger,
    colors.$danger,
    colors.$danger-hover,
    colors.$danger-dark,
    colors.$danger-shadow
  );

  @include button(
    success,
    colors.$success,
    colors.$success-hover,
    colors.$success-dark,
    colors.$success-shadow
  );

  &.light {
    background-color: #fff;
    border-bottom-color: transparent;

    &:hover {
      background-color: colors.$bg-dark;
    }

    @mixin light(
      $variation,
      $color: colors.$primary,
      $bg: colors.$primary-light,
      $shadow: colors.$primary-shadow,
      $active: colors.$primary-dark
    ) {
      &.#{$variation} {
        background-color: $bg;
        color: $color;

        &:hover,
        &:focus {
          background-color: $color;
          color: #fff;
        }

        &:focus {
          box-shadow: 0px 0px 0px 3px $shadow;
        }

        &:active {
          background-color: $active;
        }
      }
    }

    @include light(primary);

    @include light(
      warning,
      colors.$warning,
      colors.$warning-light,
      colors.$warning-shadow,
      colors.$warning-dark
    );

    @include light(
      danger,
      colors.$danger,
      colors.$danger-light,
      colors.$danger-shadow,
      colors.$danger-dark
    );

    @include light(
      success,
      colors.$success,
      colors.$success-light,
      colors.$success-shadow,
      colors.$success-dark
    );
  }

  &.link {
    background-color: transparent;
    border-bottom-color: transparent;

    @mixin link(
      $variation,
      $color: colors.$primary,
      $hover: colors.$primary-light
    ) {
      &.#{$variation} {
        color: $color;

        &:hover,
        &:focus,
        &:active {
          background-color: $hover;
        }
      }
    }

    @include link(primary);
    @include link(warning, colors.$warning, colors.$warning-light);
    @include link(danger, colors.$danger, colors.$danger-light);
    @include link(success, colors.$success, colors.$success-light);
  }

  &:disabled,
  &.disabled {
    opacity: 0.5;
    pointer-events: none;
    border-bottom-color: transparent;
  }
}

[role="button"] {
  transition: box-shadow variables.$transition-duration;

  &:focus {
    box-shadow: 0px 0px 0px 3px colors.$primary-shadow;
    outline: none;
  }
}
