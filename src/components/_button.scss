@use "../variables";
@use "../colors";

$btn-padding-y: (
  sm: 0.4rem,
  lg: 0.56rem,
);

$btn-padding-x: (
  sm: 0.75rem,
  lg: 0.9rem,
  xl: 1.3rem,
);

.btn {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.4rem;
  flex-shrink: 0;
  color: colors.$body-light;
  padding: map-get($btn-padding-y, sm) map-get($btn-padding-x, lg);
  background-color: transparent;
  border: 3px solid transparent;
  height: map-get(variables.$form-controls-height, sm);
  position: relative;
  outline: none;
  border-radius: map-get(variables.$radius, lg);
  transition: background-color variables.$transition-duration,
    color variables.$transition-duration,
    box-shadow variables.$transition-duration;

  &:hover,
  &:focus {
    background-color: colors.$bg-dark;
  }

  &:focus {
    box-shadow: 0px 0px 0px 3px rgba(0, 0, 0, 0.1);
  }

  &.small {
    padding: map-get($btn-padding-y, sm) map-get($btn-padding-x, sm);
    height: map-get(variables.$form-controls-height, xs);
    font-size: 0.875rem;
    border-radius: map-get(variables.$radius, sm);

    &.icon {
      font-size: 1rem;
    }
  }

  &.large {
    padding: map-get($btn-padding-y, lg) map-get($btn-padding-x, xl);
    height: map-get(variables.$form-controls-height, lg);
  }

  &.icon-only {
    width: map-get(variables.$form-controls-height, sm);
  }

  @mixin button($variation, $bg, $hover, $active, $focus, $light) {
    &.#{$variation} {
      background-color: $bg;
      color: #fff;
      border-bottom-color: $active;

      &:hover,
      &:focus {
        background-color: $hover;
      }

      &:focus {
        box-shadow: 0px 0px 0px 3px $focus;
      }

      &:active {
        background-color: $active;
      }
    }

    &.light {
      background-color: #fff;
      border-bottom-color: transparent;

      &:hover {
        background-color: colors.$bg-dark;
      }

      &.#{$variation} {
        background-color: $light;
        color: $bg;

        &:hover,
        &:focus {
          background-color: $bg;
          color: #fff;
        }

        &:focus {
          box-shadow: 0px 0px 0px 3px $focus;
        }

        &:active {
          background-color: $active;
        }
      }
    }

    &.link {
      background-color: transparent;
      border-bottom-color: transparent;

      &.#{$variation} {
        color: $bg;

        &:hover,
        &:focus,
        &:active {
          background-color: $light;
        }
      }
    }
  }

  @include button(
    primary,
    colors.$primary,
    colors.$primary-hover,
    colors.$primary-dark,
    colors.$primary-focus,
    colors.$primary-light
  );

  @include button(
    warning,
    colors.$warning,
    colors.$warning-hover,
    colors.$warning-dark,
    colors.$warning-focus,
    colors.$warning-light
  );

  @include button(
    danger,
    colors.$danger,
    colors.$danger-hover,
    colors.$danger-dark,
    colors.$danger-focus,
    colors.$danger-light
  );

  @include button(
    success,
    colors.$success,
    colors.$success-hover,
    colors.$success-dark,
    colors.$success-focus,
    colors.$danger-light
  );

  &:disabled,
  &.disabled {
    opacity: 0.5;
    pointer-events: none;
    border-bottom-color: transparent;
  }
}

[role="button"] {
  transition: box-shadow variables.$transition-duration;

  &:focus {
    box-shadow: 0px 0px 0px 3px colors.$primary-focus;
    outline: none;
  }
}
