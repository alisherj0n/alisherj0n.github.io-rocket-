@use "../variables";
@use "../colors";

select {
  padding: map-get(variables.$form-controls-padding-y, "sm")
    map-get(variables.$form-controls-padding-x, "sm") + 1rem
    map-get(variables.$form-controls-padding-y, "sm")
    map-get(variables.$form-controls-padding-x, "sm");
  color: colors.$body;
  appearance: none;
  background-repeat: no-repeat;
  background-position: right 0.8rem center;
  background-image: url(../../images/select-arrow.png);
  background-size: 0.5rem;
  height: map-get(variables.$form-controls-height, "sm");
  border: 1px solid colors.$border;
  border-radius: map-get(variables.$radius, "lg");
  background-color: transparent;
  transition: border-color variables.$transition-duration;
  outline: none;

  &:focus {
    border-color: colors.$primary;
  }

  &:disabled {
    background-color: colors.$grey-light;
    pointer-events: none;
  }

  &.small {
    font-size: 0.875rem;
    height: map-get(variables.$form-controls-height, "xs");
    border-radius: map-get(variables.$radius, "sm");
  }

  &.large {
    height: map-get(variables.$form-controls-height, "lg");
  }
}

input:not([type="checkbox"]) {
  height: map-get(variables.$form-controls-height, "sm");
  border: 1px solid colors.$border;
  border-radius: map-get(variables.$radius, "lg");
  background-color: transparent;
  transition: border-color variables.$transition-duration;
  outline: none;
  padding: map-get(variables.$form-controls-padding-y, "sm")
    map-get(variables.$form-controls-padding-x, "sm");
  font-family: variables.$font-family;
  width: 100%;

  &:focus {
    border-color: colors.$primary;
  }

  &:disabled {
    background-color: colors.$grey-light;
    pointer-events: none;
  }

  &[type="date"] {
    color: colors.$body;
  }

  &.small:not([type="checkbox"]) {
    font-size: 0.875rem;
    height: map-get(variables.$form-controls-height, "xs");
    border-radius: map-get(variables.$radius, "sm");
  }

  &.large:not([type="checkbox"]) {
    height: map-get(variables.$form-controls-height, "lg");
  }
}

textarea {
  border: 1px solid colors.$border;
  border-radius: map-get(variables.$radius, "lg");
  background-color: transparent;
  transition: border-color variables.$transition-duration;
  outline: none;
  padding: map-get(variables.$form-controls-padding-y, "sm")
    map-get(variables.$form-controls-padding-x, "sm");
  font-family: variables.$font-family;
  width: 100%;

  &:focus {
    border-color: colors.$primary;
  }

  &:disabled {
    background-color: colors.$grey-light;
    pointer-events: none;
  }
}

.input {
  display: flex;
  flex-direction: column;
  gap: 0.3rem;
}

.input-with-icon {
  position: relative;
  width: 100%;

  &.left-icon input {
    padding-left: 2.8rem;
  }

  &.right-icon input {
    padding-right: 2.8rem;
  }

  .left,
  .right {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
  }

  .left {
    left: 1rem;
    color: colors.$body-light;
    margin: 0;
  }
  .right {
    right: 0.2rem;
  }

  input.large + .right {
    right: 0.4rem;
  }
}

.input-group {
  display: flex;

  > :first-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  > :last-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    margin-left: -1px;
  }

  > :focus {
    z-index: 1;
  }
}

.time-range {
  display: flex;
  justify-content: space-between;
  gap: 1rem;

  .input {
    width: 100%;
  }
}

.input-group {
  input[type="time"]::-webkit-calendar-picker-indicator {
    display: none;
  }

  input[type="time"] {
    max-width: 5rem;
  }

  input[type="date"] {
    max-width: 100%;
  }
}
